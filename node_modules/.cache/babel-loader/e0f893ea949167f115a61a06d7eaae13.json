{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/centricgateway/Documents/projects/appraisal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/centricgateway/Documents/projects/appraisal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto = require(\"crypto\");\n\nvar fs = require(\"fs\");\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar FsHelper_1 = require(\"./FsHelper\");\n\nvar CancellationToken =\n/*#__PURE__*/\nfunction () {\n  function CancellationToken(typescript, cancellationFileName, isCancelled) {\n    _classCallCheck(this, CancellationToken);\n\n    this.typescript = typescript;\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || crypto.randomBytes(64).toString('hex');\n    this.lastCancellationCheckTime = 0;\n  }\n\n  _createClass(CancellationToken, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        cancellationFileName: this.cancellationFileName,\n        isCancelled: this.isCancelled\n      };\n    }\n  }, {\n    key: \"getCancellationFilePath\",\n    value: function getCancellationFilePath() {\n      return path.join(os.tmpdir(), this.cancellationFileName);\n    }\n  }, {\n    key: \"isCancellationRequested\",\n    value: function isCancellationRequested() {\n      if (this.isCancelled) {\n        return true;\n      }\n\n      var time = Date.now();\n      var duration = Math.abs(time - this.lastCancellationCheckTime);\n\n      if (duration > 10) {\n        // check no more than once every 10ms\n        this.lastCancellationCheckTime = time;\n        this.isCancelled = FsHelper_1.FsHelper.existsSync(this.getCancellationFilePath());\n      }\n\n      return this.isCancelled;\n    }\n  }, {\n    key: \"throwIfCancellationRequested\",\n    value: function throwIfCancellationRequested() {\n      if (this.isCancellationRequested()) {\n        throw new this.typescript.OperationCanceledException();\n      }\n    }\n  }, {\n    key: \"requestCancellation\",\n    value: function requestCancellation() {\n      fs.writeFileSync(this.getCancellationFilePath(), '');\n      this.isCancelled = true;\n    }\n  }, {\n    key: \"cleanupCancellation\",\n    value: function cleanupCancellation() {\n      if (this.isCancelled && FsHelper_1.FsHelper.existsSync(this.getCancellationFilePath())) {\n        fs.unlinkSync(this.getCancellationFilePath());\n        this.isCancelled = false;\n      }\n    }\n  }], [{\n    key: \"createFromJSON\",\n    value: function createFromJSON(typescript, json) {\n      return new CancellationToken(typescript, json.cancellationFileName, json.isCancelled);\n    }\n  }]);\n\n  return CancellationToken;\n}();\n\nexports.CancellationToken = CancellationToken;","map":null,"metadata":{},"sourceType":"script"}